"""
Plot up the power and flux that were generated by SA_generatePDFs
and SA_fluxPower.  uses pipeline infofile to figure out where everything is.

Usage:
python -u SA_plotPowerFlux.py <simname> <output#>
"""

import matplotlib
matplotlib.use("Agg")
import matplotlib.pyplot as plt
import numpy as np
import sys, math


f = open('pipelines/%s_RD%04d_pipeline.info'%(sys.argv[1], int(sys.argv[2])), 'r')
lines = [line for line in f]
simname = lines[0].strip()
d = int(lines[1].strip())
dim = int(lines[2].strip())
dataLoc = sys.argv[3] #lines[3].strip()
nRanks = int(lines[4].strip())
nPerRank = int(lines[5].strip())
if dataLoc == 'BW':
    workdir = '/u/sciteam/wells/scratch/prodRun'
    scriptsdir = '/u/sciteam/wells/scratch/prodRun/scripts'
    dataRepo = scriptsdir
elif dataLoc == 'HD':
    workdir = '/home/azton/research/nextGenIGM'
    dataRepo = workdir+'/scripts'#scripts/final_dataRepo'
    scriptsdir = workdir+'/scripts'
    analysisDir = workdir+'/analysis'
elif dataLoc == 'bigbook':
    workdir = '/media/azton/bigbook/projects/nextGenIGM'
    scriptsdir = '/oasis/scratch/comet/azton/temp_project/nextGenIGM/scripts'
    dataRepo = workdir
    analysisDir = '/oasis/scratch/comet/azton/temp_project/nextGenIGM/analysis'
elif dataLoc == 'comet':
    workdir = 'oasis/scratch/comet/azton/temp-project/nextGenIGM'
else:
    print('Data Location not recognized!\nUse "BW" for bluewaters, "HD" for harddrive, "bigbook" for external!')
    quit()

rdir = '%s/rayData/%s/RD%04d'%(scriptsdir, simname, d)
meanflux = np.loadtxt('%s/meanFluxPerPixel.txt'%rdir)
meanflux = np.float(meanflux)
fluxhist = np.loadtxt('%s/fluxPDF.txt'%rdir)
fluxbins = np.loadtxt('%s/fluxPDFbins.txt'%rdir)
pdfSum = sum(fluxhist[i]*(fluxbins[i+1]-fluxbins[i]) for i in range(len(fluxhist)))
fluxhist = fluxhist * 20./sum(fluxhist) #sum of fluxhist should be 20.0
powerhist = np.loadtxt('%s/fluxPower.txt'%rdir)
wavenums = np.loadtxt('%s/fluxPowerWaveNum.txt'%rdir)
dbins = np.append(0.0, np.linspace(0.025, 0.975,20))
dbins = np.append(dbins, 1.0)
dbins = np.append(0.0, np.linspace(0.025, 0.975, 20))
dbins = np.append(dbins, 1.0)

dataFlux=[0.6052, 0.2004, 0.1472, 0.1471, 0.1380, \
            0.1370, 0.1383, 0.1350, 0.1539, 0.1602,\
            0.1815, 0.2029, 0.2253, 0.2855, 0.3341, \
            0.4120, 0.5508, 0.8279, 1.3867, 3.5231, \
            10.1090]
dferror = [0.0990, 0.0390, 0.0240, 0.0220, 0.0220, \
            0.0210, 0.0220, 0.0230, 0.0240, 0.0260,\
            0.0270, 0.0280, 0.0290, 0.0320, 0.0370,\
            0.0410, 0.0480, 0.0610, 0.0810, 0.1240,\
            0.4230]
mcdataFlux=[5.1e-1, 1.8e-1, 1.2e-1, 1.3e-1, \
            1.2e-1, 1.23e-1, 1.05e-1, 1.1e-1, \
            1.2e-1, 1.15e-1, 1.5e-1, 1.7e-1, \
            0.2, 0.25,0.28,0.38, 0.55, 0.8, 1.7, 5, 9 ]
datawave = [9.5e-3, 5e-3, 1.5e-3, 1.5e-2, 4.5e-2, 9.5e-2, 1.5e-1 ]
dataPower = [18.75, 16.5, 12.5, 6., 1.8,0.14, 2e-2]
dataPower = [dataPower[i]/math.pi for i in range(len(dataPower))]
# pfCometFlux = np.loadtxt('/home/azton/simulations/pengfei_scripts/flux_pdf_RD0105_original_1024_comet_new.txt')
# pfCometPower = np.loadtxt('/home/azton/simulations/pengfei_scripts/power_RD0105_1024_comet.txt')


fig, ax = plt.subplots(1,2, figsize=(8,4))
ax[0].plot(fluxbins[:-1], fluxhist, label= simname)
# ax[0].plot(pfCometFlux[0][:], pfCometFlux[1][:], label="PFC Comet", alpha=0.4)
ax[0].set_yscale('log')
ax[0].errorbar(dbins[:-1], dataFlux,yerr=dferror, \
            label='Rollinde 2012 UVES', markersize=4, color = 'r', alpha=0.4)
ax[0].scatter(dbins[:-1], mcdataFlux, label='McDonald/Jena SDSS', s=4, c='k', alpha=0.4)
#ax[1].set_ylim([1e-2, 5e1])
#ax[1].set_xlim([4e-4, 2.5e-1])
powerhist = powerhist/math.pi
ax[1].loglog(wavenums, powerhist, label = simname)
# ax[1].loglog(pfCometPower[0][:], pfCometPower[1][:]*pfCometPower[0][:]/math.pi, label="PFC Comet")
ax[1].scatter(datawave, dataPower, label='est. data', s=5, c='r')
ax[1].legend()
ax[0].set_title(simname+'_RD%04d'%d)
ax[1].set_title("$F_{mean}$ = %0.3f"%(meanflux))
plt.savefig('%s/%s/RD%04d_powerFlux.png'%(analysisDir, simname, d))


